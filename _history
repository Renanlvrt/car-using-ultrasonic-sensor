{"entries":[{"timestamp":1756458061555,"editorVersion":"8.0.16","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":185,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":821,"diffs":[[1,""]]},{"start1":1,"length1":335,"diffs":[[1,""]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":133,"length1":164,"diffs":[[1,"        \"microphone\": \"*\"\n"]]},{"start1":223,"length1":39,"diffs":[[1,"        \"README.md\"\n"]]},{"start1":250,"length1":31,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]},{"type":"added","filename":"main.py","value":"def enable_distance(distance):\n    #led.enable(True)\n            led.plot(0, 0)\n            if distance <= 3000:\n                led.plot(0, 1)\n                if distance <= 2500:\n                    #here do things\n                    led.plot(0, 1)\n                    if distance <= 1500:\n                        led.plot(0, 2)\n                        if distance <= 1000:\n                            led.plot(0, 3)\n                            if distance <= 500:\n                                led.plot(0, 4)\n                            else:\n                                led.unplot(0, 4)\n                        else:\n                            led.unplot(0, 3)\n                    else:\n                        led.unplot(0, 2)\n                else:\n                    led.unplot(0, 1)\n    \ndef on_forever():\n    distance = sonar.ping(DigitalPin.P12, DigitalPin.P14, PingUnit.MICRO_SECONDS)\n    if distance <= 4000:\n        enable_distance(distance)\n    else:\n        basic.clear_screen()\n    serial.writeNumber(sonar.ping(DigitalPin.P12, DigitalPin.P14, PingUnit.MICRO_SECONDS));\n    pass\nbasic.forever(on_forever)"}]},{"timestamp":1756458115111,"editorVersion":"8.0.16","changes":[{"type":"edited","filename":"main.py","patch":[{"start1":973,"length1":9,"diffs":[[1,""]]}]}]},{"timestamp":1756459703641,"editorVersion":"8.0.16","changes":[{"type":"edited","filename":"main.py","patch":[{"start1":973,"length1":73,"diffs":[[1,"        \n"]]}]}]},{"timestamp":1756459710128,"editorVersion":"8.0.16","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":106,"diffs":[[1,""]]},{"start1":69,"length1":22,"diffs":[[1,"    led.plot(0, 0)\n"]]},{"start1":201,"length1":113,"diffs":[[1,"            led.plot(0, 1)\n"]]},{"start1":264,"length1":93,"diffs":[[1,"                led.plot(0, 2)\n"]]},{"start1":335,"length1":105,"diffs":[[1,"                    led.plot(0, 3)\n"]]},{"start1":413,"length1":117,"diffs":[[1,"                        led.plot(0, 4)\n"]]},{"start1":481,"length1":123,"diffs":[[1,"                        led.unplot(0, 4)\n"]]},{"start1":590,"length1":111,"diffs":[[1,"                    led.unplot(0, 3)\n"]]},{"start1":683,"length1":99,"diffs":[[1,"                led.unplot(0, 2)\n"]]},{"start1":760,"length1":87,"diffs":[[1,"            led.unplot(0, 1)\n"]]},{"start1":1020,"length1":70,"diffs":[[1,""]]}]},{"type":"edited","filename":"main.py","patch":[{"start1":0,"length1":99,"diffs":[[1,""]]},{"start1":53,"length1":663,"diffs":[[1,"            led.plot(0, 0)\n            if distance <= 3000:\n                led.plot(0, 1)\n                if distance <= 2500:\n                    #here do things\n                    led.plot(0, 1)\n                    if distance <= 1500:\n                        led.plot(0, 2)\n                        if distance <= 1000:\n                            led.plot(0, 3)\n                            if distance <= 500:\n                                led.plot(0, 4)\n                            else:\n                                led.unplot(0, 4)\n                        else:\n                            led.unplot(0, 3)\n"]]},{"start1":699,"length1":123,"diffs":[[1,"                        led.unplot(0, 2)\n"]]},{"start1":762,"length1":329,"diffs":[[1,"                    led.unplot(0, 1)\n"]]},{"start1":973,"length1":0,"diffs":[[1,"\n"]]}]}]},{"timestamp":1756460309524,"editorVersion":"8.0.16","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":31,"length1":258,"diffs":[[1,"    motobit.invert(Motor.Left, false)\n    motobit.enable(MotorPower.On)\n"]]},{"start1":1343,"length1":158,"diffs":[[1,""]]}]},{"type":"edited","filename":"main.py","patch":[{"start1":25,"length1":259,"diffs":[[1,"    motobit.invert(Motor.LEFT, False)\n    motobit.enable(MotorPower.ON)\n"]]},{"start1":99,"length1":1,"diffs":[[1,""]]},{"start1":1214,"length1":162,"diffs":[[1,""]]}]}]},{"timestamp":1756460901595,"editorVersion":"8.0.16","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":289,"length1":16,"diffs":[[1,""]]},{"start1":577,"length1":0,"diffs":[[1,"            obstacle_detected()\n"]]},{"start1":1529,"length1":0,"diffs":[[1,"                motobit.setMotorSpeed(Motor.Left, MotorDirection.Forward, 100)\n                motobit.setMotorSpeed(Motor.Left, MotorDirection.Forward, 100)\n"]]},{"start1":1714,"length1":32,"diffs":[[1,""]]},{"start1":1818,"length1":150,"diffs":[[1,""]]},{"start1":2256,"length1":32,"diffs":[[1,""]]}]},{"type":"edited","filename":"main.py","patch":[{"start1":284,"length1":16,"diffs":[[1,""]]},{"start1":286,"length1":0,"diffs":[[1,"\n"]]},{"start1":546,"length1":0,"diffs":[[1,"            obstacle_detected()\n"]]},{"start1":1402,"length1":32,"diffs":[[1,"                motobit.set_motor_speed(Motor.LEFT, MotorDirection.FORWARD, 100)\n                motobit.set_motor_speed(Motor.LEFT, MotorDirection.FORWARD, 100)\n"]]},{"start1":1665,"length1":154,"diffs":[[1,""]]},{"start1":2041,"length1":246,"diffs":[[1,"basic.forever(on_forever)"]]}]}]},{"timestamp":1756461325490,"editorVersion":"8.0.16","changes":[{"type":"edited","filename":"main.py","patch":[{"start1":300,"length1":28,"diffs":[[1,""]]}]}]},{"timestamp":1756462561293,"editorVersion":"8.0.16","changes":[{"type":"edited","filename":"main.py","patch":[{"start1":328,"length1":5,"diffs":[[1,""]]}]}]},{"timestamp":1756462579179,"editorVersion":"8.0.16","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":84,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"31\" y=\"20\"></block><block type=\"device_forever\" x=\"272\" y=\"10\"></block></xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":262,"length1":42,"diffs":[[1,"    servos.P0.setAngle(37)\n"]]},{"start1":305,"length1":175,"diffs":[[1,""]]},{"start1":308,"length1":162,"diffs":[[1,""]]},{"start1":2057,"length1":75,"diffs":[[1,"        motobit.setMotorSpeed(Motor.Left, MotorDirection.Forward, 50)\n"]]},{"start1":2166,"length1":95,"diffs":[[1,"    serial.writeNumber(sonar.ping(DigitalPin.P12, DigitalPin.P14, PingUnit.MicroSeconds))\n"]]},{"start1":2264,"length1":351,"diffs":[[1,"input.buttonIsPressed(Button.A)\n"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":416,"length1":44,"diffs":[[1,""]]}]},{"type":"edited","filename":"main.py","patch":[{"start1":256,"length1":44,"diffs":[[1,"    servos.P0.set_angle(37)\n"]]},{"start1":300,"length1":181,"diffs":[[1,"    servos.P0.set_angle(37)\n    \n"]]},{"start1":334,"length1":156,"diffs":[[1,""]]},{"start1":1879,"length1":73,"diffs":[[1,"        motobit.set_motor_speed(Motor.LEFT, MotorDirection.FORWARD, 50)\n"]]},{"start1":1980,"length1":93,"diffs":[[1,"    serial.writeNumber(sonar.ping(DigitalPin.P12, DigitalPin.P14, PingUnit.MICRO_SECONDS));\n"]]},{"start1":2133,"length1":138,"diffs":[[1,""]]},{"start1":2142,"length1":219,"diffs":[[1,"input.button_is_pressed(Button.A, button_a_pressed())\n"]]}]},{"type":"added","filename":"test.ts","value":"// les tests vont ici ; cela ne sera pas compilé si ce paquet est utilisé en tant qu'extension.\n"}]}],"snapshots":[{"timestamp":1756458061554,"editorVersion":"8.0.16","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"car using ultrasonic sensor\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1756459861976,"editorVersion":"8.0.16","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"31\" y=\"20\"></block><block type=\"device_forever\" x=\"272\" y=\"10\"></block></xml>","main.ts":"","README.md":"","main.py":"def enable_distance(distance):\n    #led.enable(True)\n            led.plot(0, 0)\n            if distance <= 3000:\n                led.plot(0, 1)\n                if distance <= 2500:\n                    #here do things\n                    led.plot(0, 1)\n\nled.plot(0, 1)\n                    if distance <= 1500:\n                        led.plot(0, 2)\n                        if distance <= 1000:\n                            led.plot(0, 3)\n                            if distance <= 500:\n                                led.plot(0, 4)\n                            else:\n                                led.unplot(0, 4)\n                        else:\n                            led.unplot(0, 3)\n                    else:\n                        led.unplot(0, 2)\n                else:\n                    led.unplot(0, 1)\n    \ndef on_forever():\n    distance = sonar.ping(DigitalPin.P12, DigitalPin.P14, PingUnit.MICRO_SECONDS)\n    if distance <= 4000:\n        enable_distance(distance)\n    else:\n        motobit.set_motor_speed(Motor.LEFT, MotorDirection.FORWARD, 50)\n        basic.clear_screen()\n    serial.writeNumber(sonar.ping(DigitalPin.P12, DigitalPin.P14, PingUnit.MICRO_SECONDS));\n    pass\nbasic.forever(on_forever)","pxt.json":"{\n    \"name\": \"car using ultrasonic sensor\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\",\n        \"servo\": \"*\",\n        \"motobit\": \"github:sparkfun/pxt-moto-bit#v0.0.4\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1756462561293,"editorVersion":"8.0.16","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"31\" y=\"20\"></block><block type=\"device_forever\" x=\"272\" y=\"10\"></block></xml>","main.ts":"","README.md":"","main.py":"def obstacle_detected():\n    #motobit.invert(Motor.LEFT, False)\n    #motobit.invert(Motor.RIGHT, False)\n    motobit.set_motor_speed(Motor.LEFT, MotorDirection.REVERSE, 60)\n    motobit.set_motor_speed(Motor.LEFT, MotorDirection.REVERSE, 60)\n    pause(2000)\n    servos.P0.set_angle(37)\n    pause(2000)\n\n\ndef enable_distance(distance):\n    #led.enable(True)\n    #led.plot(0, 0)\n    if distance <= 3000:\n        led.plot(0, 1)\n        if distance <= 2500:\n            #here do things\n            led.plot(1, 1)\n            led.plot(2, 1)\n            led.plot(3, 1)\n            if distance <= 1500:\n                led.plot(1, 2)\n                led.plot(2, 2)\n                led.plot(3, 2)\n                if distance <= 1000:\n                    led.plot(1, 3)\n                    led.plot(2, 3)\n                    led.plot(3, 3)\n                    if distance <= 500:\n                        led.plot(1, 4)\n                        led.plot(2, 4)\n                        led.plot(3, 4)\n                    else:\n                        led.unplot(1, 4)\n                        led.unplot(2, 4)\n                        led.unplot(3, 4)\n                else:\n                    led.unplot(1, 3)\n                    led.unplot(2, 3)\n                    led.unplot(3, 3)\n            else:\n                led.unplot(1, 2)\n                led.unplot(2, 2)\n                led.unplot(3, 2)\n            obstacle_detected()\n        else:\n            led.unplot(1, 1)\n            led.unplot(2, 1)\n            led.unplot(3, 1)\n            motobit.set_motor_speed(Motor.LEFT, MotorDirection.FORWARD, 100)\n            motobit.set_motor_speed(Motor.LEFT, MotorDirection.FORWARD, 100)\n    \ndef on_forever():\n    distance = sonar.ping(DigitalPin.P12, DigitalPin.P14, PingUnit.MICRO_SECONDS)\n    if distance <= 4000:\n        enable_distance(distance)\n    else:\n        motobit.set_motor_speed(Motor.LEFT, MotorDirection.FORWARD, 50)\n        basic.clear_screen()\n    serial.writeNumber(sonar.ping(DigitalPin.P12, DigitalPin.P14, PingUnit.MICRO_SECONDS));\n    pass\nbasic.forever(on_forever)\n\n\ndef button_a_pressed():\n    pass\ninput.button_is_pressed(Button.A, button_a_pressed())\n#motobit.set_motor_speed(Motor.LEFT, MotorDirection.FORWARD, 100)\n#motobit.set_motor_speed(Motor.LEFT, MotorDirection.FORWARD, 100)","pxt.json":"{\n    \"name\": \"car using ultrasonic sensor\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\",\n        \"servo\": \"*\",\n        \"motobit\": \"github:sparkfun/pxt-moto-bit#v0.0.4\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[],"lastSaveTime":1756463127094}